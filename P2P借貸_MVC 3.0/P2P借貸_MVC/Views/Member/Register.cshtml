@model  P2P借貸_MVC.Models.BasicInfo

@{
    ViewBag.Title = "Register";
}

@section Style{
    
    <style>
        #img1 {
            width:250px;

        }
        </style>

    }

<h2>Register</h2>
<hr />



@using (Html.BeginForm("Register", "Member", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    HttpCookie _cookie = Request.Cookies["account"];

    <div class="col-md-6">
    <div class="form-group">
        @Html.LabelFor(s => s.MemberName, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EditorFor(s => s.MemberName, new { htmlAttributes = new { @class = "form-control", placeholder = "MemberName" } })
            @Html.ValidationMessageFor(s => s.MemberName, "", new { @class = "text-danger" })


        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(s => s.Password, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EditorFor(s => s.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
            @Html.ValidationMessageFor(s => s.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(s => s.MemberNickName, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EditorFor(s => s.MemberNickName, new { htmlAttributes = new { @class = "form-control", placeholder = "NickName" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(s => s.eMail, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EditorFor(s => s.eMail, new { htmlAttributes = new { @class = "form-control", placeholder = "eMail" } })
            @Html.ValidationMessageFor(s => s.eMail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(s => s.Gender, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.DropDownListFor(p => p.Gender, new List<SelectListItem> {
           new SelectListItem { Text = "男" },
           new SelectListItem { Text = "女" }
       }, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(s => s.Phone, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EditorFor(s => s.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone" } })
            @Html.ValidationMessageFor(s => s.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(s => s.Birthday, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EditorFor(s => s.Birthday, new { htmlAttributes = new { type = "date", @class = "form-control", placeholder = "Birthday" } })
            @Html.ValidationMessageFor(s => s.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>

        

    <div class="form-group">
        @Html.LabelFor(s => s.Address, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EditorFor(s => s.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
            @Html.ValidationMessageFor(s => s.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    </div>


    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(s => s.最高學歷, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.EditorFor(s => s.最高學歷, new { htmlAttributes = new { @class = "form-control", placeholder = "最高學歷" } })
                @Html.ValidationMessageFor(s => s.最高學歷, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.就業狀態, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(p => p.就業狀態, new List<SelectListItem> {
           new SelectListItem { Text = "已就業" },
           new SelectListItem { Text = "待業中" }
       }, new { @class = "form-control", id = "就業狀態" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.WorkPlace, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.EditorFor(s => s.WorkPlace, new { htmlAttributes = new { @class = "form-control", placeholder = "WorkPlace" } })
                @Html.ValidationMessageFor(s => s.WorkPlace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.BankCode, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @{
                    var datas = new SelectList(ViewBag.Bank, "BankCode", "BankName");
                }

                @Html.DropDownListFor(p => p.BankCode, datas, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.BankAccount, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.EditorFor(s => s.BankAccount, new { htmlAttributes = new { @class = "form-control", placeholder = "Bank Account" } })
                @Html.ValidationMessageFor(s => s.BankAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.Photo, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @*@Html.EditorFor(s => s.Photo, new { htmlAttributes = new { type = "file", @class = "form-control", placeholder = "" } })*@
                <input type="file" id="file_1" name="file_1" class="form-control" />
                @*<input type="hidden" id="Photo" name="Photo" />*@
                <img id="img1" />
            </div>
        </div>

        @{
            
            if (_cookie != null && _cookie.Values["PermissionLevel"] == "999")
            {
                <div class="form-group">
                        @Html.LabelFor(s => s.PermissionLevel, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @{
                                var data2 = new SelectList(ViewBag.Level, "PermissionLevel", "PermissionCall");
                            }

                            @Html.DropDownListFor(p => p.PermissionLevel, data2, new { @class = "form-control" })
                        </div>
                    </div>
            }

        }
        
        </div>
        <div class="form-group">
            <div class="col-sm-offset-5 col-sm-10">
                <button type="button" id="btn_demo" class="btn btn-default">Demo</button>
                <button type="submit" class="btn btn-primary">註冊</button>
            </div>
        </div>


            if (_cookie != null && _cookie.Values["PermissionLevel"] == "999")
            {
                @Html.ActionLink("回到管理頁面", "Manage", "Manage")
            }
            else
            {
                @Html.ActionLink("回到登入頁面", "Index")
            }

}

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>

        @section Scripts{
            <script>
                $(function () {
                    $("#file_1").change(function () {
                        var theFile = this.files[0];
                        var reader = new FileReader();

                        reader.readAsDataURL(theFile);
                        reader.addEventListener("load", function (event) {

                            $("#img1").attr("src", event.target.result);
                        });
                    });

                    $("#就業狀態").change(function () {
                        if ($("#就業狀態").val() == "待業中") {
                            $("#WorkPlace").prop("disabled", true);
                            $("#WorkPlace").val("N/A");
                        }
                        else {
                            $("#WorkPlace").prop("disabled", false);
                            $("#WorkPlace").val("");
                        }
                    });

                    $("#btn_demo").click(function () {
                        $("#MemberName").val("qqqqqqq");
                        $("#Password").val("123456");
                        $("#MemberNickName").val("Nick");
                        $("#eMail").val("qq@360.com");
                        $("#Phone").val("022912345678");
                        $("#Birthday").val("1990/11/2");
                        $("#Address").val("復興北路一段");
                        $("#最高學歷").val("台灣大學");
                        $("#WorkPlace").val("忠孝東路");
                        $("#BankAccount").val("1234567890");
                    });
                });
            </script>
        }
